import{_ as r,r as i,o as c,c as m,a as t,b as s,d as e,w as n,e as a}from"./app-s5JIphqh.js";const p={},d={href:"http://arxiv.org/abs/2305.11853",target:"_blank",rel:"noopener noreferrer"},h=t("p",null,"⭐⭐⭐⭐",-1),u=t("p",null,"arXiv:2305.11853, NeurlPS 2023",-1),g={href:"https://github.com/shuaichenchang/prompt-text-to-sql",target:"_blank",rel:"noopener noreferrer"},_=a('<h2 id="一、论文速读" tabindex="-1"><a class="header-anchor" href="#一、论文速读"><span>一、论文速读</span></a></h2><p>本文主要是在三种常见的 Text2SQL ICL settings 评估不同的 prompt construction strategies。</p><h2 id="二、text2sql-icl-settings" tabindex="-1"><a class="header-anchor" href="#二、text2sql-icl-settings"><span>二、Text2SQL ICL settings</span></a></h2><p>论文在下面三种 Text2SQL settings 下来做的评估：</p><ul><li><strong>Zero-shot Text2SQL</strong>：输入一个 task instruction、一个 test question 以及相应的 DB，在没有任何 demonstrations 情况下让 LLM 直接推理出 SQL</li><li><strong>Single-domain Few-shot Text2SQL</strong>：ICL 的 demonstrations 是构造自与 test question 相同的 database。这个 setting 的目标是评估 LLM 在最小的域内训练数据下执行 Text2SQL 的能力。</li><li><strong>Cross-domain Few-shot Text2SQL</strong>：ICL 的 demonstrations 是构造自与 test question 的不同的 database 中。这个 setting 的目标是评估 LLM 通过 out-of-domain demonstrations 中来学习的泛化能力。</li></ul><h2 id="三、prompt-construction" tabindex="-1"><a class="header-anchor" href="#三、prompt-construction"><span>三、Prompt Construction</span></a></h2><p>论文在每个 Text2SQL setting 中测试了不同的 prompt construction 的效果。</p><p>一个 prompt 中包含 Database Prompt 和 Demonstration Prompt。</p><h3 id="_3-1-database-prompt" tabindex="-1"><a class="header-anchor" href="#_3-1-database-prompt"><span>3.1 Database Prompt</span></a></h3><p>一个关系型 DB 包含 database schema 和 database content：</p><ul><li>database schema 由 table headers 和 tables 之间的 relationships 组成。</li><li>database content 指的是存储在 tables 中的 data</li></ul><h4 id="_3-1-1-database-schema-的-prompt-结构" tabindex="-1"><a class="header-anchor" href="#_3-1-1-database-schema-的-prompt-结构"><span>3.1.1 Database Schema 的 prompt 结构</span></a></h4><p>下图展示了之前的研究中使用的 database schema 的各种 prompt 结构：</p>',13),b=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240606200416.png",alt:"20240606200416",style:{zoom:"75%"}},null,-1),x=t("p",null,"同时为了保证文本的一致性，论文对 db schema 和 SQL 做了规范化：将 SQL 中除了数据库内容之外的所有单词转换为小写，并统一文本中的空格和换行符。如下图就是规范化前后的示例：",-1),L=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240606201528.png",alt:"20240606201528",style:{zoom:"75%"}},null,-1),S=t("h4",{id:"_3-1-2-database-content-的-prompt-结构",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_3-1-2-database-content-的-prompt-结构"},[t("span",null,"3.1.2 Database Content 的 prompt 结构")])],-1),T=t("p",null,"之前的研究内容也表示，了解数据库的内容示例可以提高模型的性能。",-1),f=t("p",null,"下图展示了 Database Content 部分的 prompt style：",-1),k=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240606200843.png",alt:"20240606200843",style:{zoom:"75%"}},null,-1),Q=a('<ul><li><em>InsertRow</em>：通过 <code>INSERT INTO</code> 语句显示每个 table 的几行数据</li><li><em>SelectRow</em>：显示 <code>SELECT * FROM T LIMIT X</code> 的查询结果</li><li><em>SelectCol</em>：按照列式的格式显示多行数据</li></ul><p>本文提出使用 <code>SELECT DISTINCT [Column] FROM [Table] LIMIT R</code> 去列出 R 行数据，从而避免重复。</p><h3 id="_3-2-demonstration-prompt" tabindex="-1"><a class="header-anchor" href="#_3-2-demonstration-prompt"><span>3.2 Demonstration Prompt</span></a></h3><p>在 few-shots settings 中，demonstrations 被放入 prompt text 来输入给 LLM。</p><p>在 single-domain few-shot setting 中，这里融入了一些 question-SQL 的 pairs 作为 demonstrations。</p><p>在 cross-domain few-shot setting 中，以往的研究都是：</p><ul><li>要么 N 个 examples 都来自于一个相同的 db</li><li>要么 N 个 examples 的每一个来自于不同的 db</li></ul>',7),C=t("p",null,[s("本文考虑了更泛用的场景：N 个 examples 是由 M 个 db 组成，每个 db 由 K 个 question-SQL pairs，由此 "),t("span",{class:"katex"},[t("span",{class:"katex-mathml"},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("semantics",null,[t("mrow",null,[t("mi",null,"M"),t("mo",null,"×"),t("mi",null,"K"),t("mo",null,"="),t("mi",null,"N")]),t("annotation",{encoding:"application/x-tex"},"M \\times K = N")])])]),t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),t("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),t("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),t("span",{class:"mbin"},"×"),t("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.6833em"}}),t("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"K"),t("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),t("span",{class:"mrel"},"="),t("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.6833em"}}),t("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])])]),s("。")],-1),y=a('<h2 id="四、实验" tabindex="-1"><a class="header-anchor" href="#四、实验"><span>四、实验</span></a></h2><p>本文在 Spider 数据集的 dev split 上实验，采用执行精度（EX）来评估 predicted SQL 和 gold SQL。</p><p>这里论文指出，在选择 few-shots 的 demonstrations 时，由于少数 db 包含长模式，这有可能导致 prompt token 数量超过 LLM 限制，所以在构造 CreateTable prompt 时，这里只使用 token 少于 1000 的 db。</p><p>具体的实验细节可以参考原论文。</p><h2 id="五、实验结果" tabindex="-1"><a class="header-anchor" href="#五、实验结果"><span>五、实验结果</span></a></h2><p>这一章介绍了在 zero-shot、single-domain 和 cross-domain 的三种 settings 下 Text2SQL 的经验发现。</p><h3 id="_5-1-zero-shot-的-text2sql" tabindex="-1"><a class="header-anchor" href="#_5-1-zero-shot-的-text2sql"><span>5.1 zero-shot 的 Text2SQL</span></a></h3><p>zero-shot setting 中重点关注于比较不同的 database prompt construction。下图展示了多种 database prompt 的 Codex 和 ChatGPT 的表现：</p>',8),M=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240606203521.png",alt:"20240606203521",style:{zoom:"75%"}},null,-1),q=t("p",null,"实验发现：",-1),w=t("ul",null,[t("li",null,"规范化后的 db schema 和 SQL 可以有更好的表现"),t("li",null,"db table 的 relationship 和 content 是很重要的，有效地提高了 LLM 的表现"),t("li",null,"Codex 在 zero-shot Text2SQL 任务上始终优于 ChatGPT")],-1),v=t("p",null,"基于以上发现，论文建议将 Codex 与规范化后的 CreateTable-SelectCol prompt construction 结合起来使用，来实现 zero-shot 的 Text2SQL。",-1),I=t("h3",{id:"_5-2-single-domain-的-text2sql",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_5-2-single-domain-的-text2sql"},[t("span",null,"5.2 single-domain 的 Text2SQL")])],-1),z=t("p",null,"下图展示了在 Codex 和 ChatGPT 上做 single-domain Text2SQL 任务时，不同的 in-domain examples 的执行精确度的实验结果：",-1),P=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240606204228.png",alt:"20240606204228",style:{zoom:"75%"}},null,-1),N=t("p",null,"得出以下结论：",-1),D=t("ul",null,[t("li",null,"in-domain 的 demonstrations 能有效提升 LLM 的表现，并随着示例数量的提高，LLM 的效果也在逐渐变好"),t("li",null,"LLM 能够从 in-domain demonstrations 中快速学习到 table relationship，但难以从中学习到 table content 的知识，因此 table content 的 prompt 是重要的")],-1),E=t("h3",{id:"_5-3-cross-domain-的-text2sql",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_5-3-cross-domain-的-text2sql"},[t("span",null,"5.3 cross-domain 的 Text2SQL")])],-1),R=t("p",null,"ICL 的 demonstrations 中使用了 M 的 demonstration databases，每一个包含 K 个 NLQ-SQL pairs。",-1),B=t("p",null,"下面这个热力图展示了 M 和 K 的个数对精确度的影响（横轴是 M，纵轴是 K，颜色越深，精确度越高）：",-1),K=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240606205110.png",alt:"20240606205110",style:{zoom:"75%"}},null,-1),j=t("p",null,"这里对实验的分析可以参考原论文。",-1),H=t("p",null,[t("strong",null,"总之，out-of-domain 的 demonstrations 增强了 LLM 在 Text2SQL 中的能力，但这些示例并没有提供特定于 DB 的知识，因此，仔细构建 Database Prompt 仍然至关重要"),s("，这也与在 zero-shot setting 中所做的观察是一致的。")],-1),F=t("h2",{id:"六、总结",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#六、总结"},[t("span",null,"六、总结")])],-1),G=t("p",null,"整的来说，论文在三种 Text2SQL ICL settings 中比较了各种 prompt constructions 的效果，为未来的研究提供了指导。",-1);function O(V,X){const l=i("ExternalLinkIcon"),o=i("center");return c(),m("div",null,[t("blockquote",null,[t("p",null,[s("论文："),t("a",d,[s("How to Prompt LLMs for Text-to-SQL: A Study in Zero-shot, Single-domain, and Cross-domain Settings"),e(l)])]),h,u,t("p",null,[s("Code: "),t("a",g,[s("GitHub"),e(l)])])]),_,e(o,null,{default:n(()=>[b]),_:1}),x,e(o,null,{default:n(()=>[L]),_:1}),S,T,f,e(o,null,{default:n(()=>[k]),_:1}),Q,C,y,e(o,null,{default:n(()=>[M]),_:1}),q,w,v,I,z,e(o,null,{default:n(()=>[P]),_:1}),N,D,E,R,B,e(o,null,{default:n(()=>[K]),_:1}),j,H,F,G])}const A=r(p,[["render",O],["__file","index.html.vue"]]),J=JSON.parse(`{"path":"/arxiv/2305.11853/","title":"🌙 How to prompt LLMs for Text2SQL","lang":"zh-CN","frontmatter":{"title":"🌙 How to prompt LLMs for Text2SQL","author":"Bin Yu","createTime":"2024/06/06 16:43:00","permalink":"/arxiv/2305.11853/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"一、论文速读","slug":"一、论文速读","link":"#一、论文速读","children":[]},{"level":2,"title":"二、Text2SQL ICL settings","slug":"二、text2sql-icl-settings","link":"#二、text2sql-icl-settings","children":[]},{"level":2,"title":"三、Prompt Construction","slug":"三、prompt-construction","link":"#三、prompt-construction","children":[{"level":3,"title":"3.1 Database Prompt","slug":"_3-1-database-prompt","link":"#_3-1-database-prompt","children":[]},{"level":3,"title":"3.2 Demonstration Prompt","slug":"_3-2-demonstration-prompt","link":"#_3-2-demonstration-prompt","children":[]}]},{"level":2,"title":"四、实验","slug":"四、实验","link":"#四、实验","children":[]},{"level":2,"title":"五、实验结果","slug":"五、实验结果","link":"#五、实验结果","children":[{"level":3,"title":"5.1 zero-shot 的 Text2SQL","slug":"_5-1-zero-shot-的-text2sql","link":"#_5-1-zero-shot-的-text2sql","children":[]},{"level":3,"title":"5.2 single-domain 的 Text2SQL","slug":"_5-2-single-domain-的-text2sql","link":"#_5-2-single-domain-的-text2sql","children":[]},{"level":3,"title":"5.3 cross-domain 的 Text2SQL","slug":"_5-3-cross-domain-的-text2sql","link":"#_5-3-cross-domain-的-text2sql","children":[]}]},{"level":2,"title":"六、总结","slug":"六、总结","link":"#六、总结","children":[]}],"readingTime":{"minutes":4.28,"words":1283},"git":{"updatedTime":1717830098000,"contributors":[{"name":"yubinCloud","email":"yubin_SkyWalker@yeah.net","commits":2}]},"filePathRelative":"notes/Text2SQL/2305.How to prompt LLMs for Text2SQL.md","categoryList":[{"type":10000,"name":"notes"},{"type":10004,"name":"Text2SQL"}]}`);export{A as comp,J as data};
