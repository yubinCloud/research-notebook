import{_ as r,r as i,o as c,c as p,a as t,b as o,d as e,w as s,e as a}from"./app-s5JIphqh.js";const h={},m={href:"http://arxiv.org/abs/2307.07306",target:"_blank",rel:"noopener noreferrer"},u=t("p",null,"⭐⭐⭐⭐",-1),d=t("p",null,"arXiv:2307.07306，浙大",-1),g={href:"https://github.com/bigbigwatermalon/C3SQL",target:"_blank",rel:"noopener noreferrer"},_=a('<h2 id="一、论文速读" tabindex="-1"><a class="header-anchor" href="#一、论文速读"><span>一、论文速读</span></a></h2><p>使用 ChatGPT 来解决 Text2SQL 任务时，few-shots ICL 的 setting 需要输入大量的 tokens，这有点昂贵且可能实际不可行。因此，本文尝试在 zero-shot 的 setting 下来解决 Text2SQL 问题。</p><p>本文提出了 <mark>C3</mark> 来基于 ChatGPT zero-shot 去做 Text2SQL，实现了 1000 tokens per query 下优于 fine-tuning-based methods。</p><h2 id="二、c3" tabindex="-1"><a class="header-anchor" href="#二、c3"><span>二、C3</span></a></h2><p>C3 由三个关键组件构成：Clear Prompts（<strong>CP</strong>）、Calibration with Hints（<strong>CH</strong>）、Consistency Output（<strong>CO</strong>），分别对应着模型输入、模型偏差和模型输出。</p><h3 id="_2-1-clear-prompts-组件" tabindex="-1"><a class="header-anchor" href="#_2-1-clear-prompts-组件"><span>2.1 Clear Prompts 组件</span></a></h3><p><mark>Clear Prompts</mark>（<strong>CP</strong>）组件的目标是为 ChatGPT 解决 Text2SQL 任务构建一个有效的 prompt。它由两部分组成：Clear Layout 和 Clear Context。</p><h4 id="_2-1-1-clear-layout" tabindex="-1"><a class="header-anchor" href="#_2-1-1-clear-layout"><span>2.1.1 Clear Layout</span></a></h4><p>在 Text2SQL 中，有两种 prompt layout 的 styles：</p><ul><li>类型 1：<strong>Complicated Layout</strong>：这种类型的 prompt 直接将 instruction、question 和 context 拼接起来，看起来较为杂乱，如下图的 (a) 所示</li><li>类型 2：<strong>Clear Layout</strong>：这种类型的 prompt 使用一个明显的分隔符将 instruction、question 和 context 分开，看起来更加清晰，如下图的 (b) 所示</li></ul>',10),C=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240607142842.png",alt:"20240607142842",style:{zoom:"75%"}},null,-1),b=a('<p>论文指出，从直觉和实验上，都证明了 clear layout 能产生更好的表现。因此本文主要使用改进后的 clear layout。</p><p>但是，论文发现直接使用上图的 (b) 作为 prompt 会在生成的 SQL 中产生冗余的 columns，为了解决这个问题，论文在 instruction 部分后面加了一句：<em>and do not select extra columns that are not explicitly requested in the query</em>。</p><h4 id="_2-1-2-clear-context" tabindex="-1"><a class="header-anchor" href="#_2-1-2-clear-context"><span>2.1.2 Clear Context</span></a></h4><p>论文指出，在 prompt context 中包含整个 db schema 会导致两个问题：</p><ol><li>在 prompt 引入过多的不相关 schema items 会让 ChatGPT 生成 SQL 时增加不相关 items 的 likelihood。</li><li>使用完整的 db schema 会让文本长度过大，导致不必要的 API tokens 开销</li></ol><p>为此，论文提出需要先进行 schema linking 以召回相关的 tables 和 columns，并只将相关的信息放入 prompt context 中。</p><p>本文提出了一个 ChatGPT-based zero-shot 的 schema linking 的方法，分成两步：</p><ul><li><strong>Table Recall</strong>：使用一个 prompt 让 ChatGPT 召回相关 tables</li><li><strong>Column Recall</strong>：基于 table recall 的结果，使用 prompt 让 ChatGPT 进一步召回相关 columns</li></ul><p>Table Recall 的 prompt 示例如下：</p>',9),T=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240607151442.png",alt:"20240607151442",style:{zoom:"75%"}},null,-1),x=t("p",null,"Column Recall 的 prompt 示例如下：",-1),L=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240607181507.png",alt:"20240607181507",style:{zoom:"75%"}},null,-1),k=t("h3",{id:"_2-2-calibration-with-hints-组件",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_2-2-calibration-with-hints-组件"},[t("span",null,"2.2 Calibration with Hints 组件")])],-1),y=t("p",null,"论文通过分析生成的 SQL query，发现了几个由于 ChatGPT 固有的 biases 造成的 errors：",-1),S=t("ul",null,[t("li",null,[t("em",null,"Bias 1"),o("：ChatGPT 在 output 中倾向于保守，SELECT 语句中经常出现与问题相关但不是必需的列。而且在涉及到数量问题时尤为明显。比如下图的左边第一个问题，"),t("code",null,"COUNT(*)"),o(" 仅用于排序，但 ChatGPT 在 SELECT 中也将其输出了。")]),t("li",null,[t("em",null,"Bias 2"),o("：ChatGPT 编写 SQL 时倾向于使用 LEFT JOIN、OR、IN，但经常无法正确使用它们。这种 bias 通常会导致执行结果中出现额外的值。")])],-1),f=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240607183150.png",alt:"20240607183150",style:{zoom:"75%"}},null,-1),P=a("<p>为了校准这些 bias，论文使用一个单独的组件来实施校准策略：<mark>Calibration with Hints</mark>（<strong>CH</strong>）。</p><p>论文通过将用于修正 Bias 的先验知识注入到与 ChatGPt 的历史对话中。在对话 history 中，我们让 ChatGPT 认为自己是一个优秀的 SQL 编写器，并引导它去遵循我们提出的 debias hints：</p><ul><li><em><strong>Hint 1</strong></em>：针对第一个 bias，这里设计了一个 tip 去指导 ChatGPT 只选择必要的 columns</li><li><em><strong>Hint 2</strong></em>：针对第二个 bias，这里设计了一个 tip 来防止 ChatGPT 滥用一些 SQL 关键字。如下图所示，prompt 中直接要求 ChatGPT 尽量避免使用 LEFT JOIN、IN、OR，而使用 JOIN 和 INSERSECT，而且在适当时使用 DISTINCT 或 LIMIT，来避免重复的执行结果。</li></ul><p>如下是一个示例：</p>",4),Q=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240607191419.png",alt:"20240607191419",style:{zoom:"75%"}},null,-1),G=a('<h3 id="_2-3-consistency-output-组件" tabindex="-1"><a class="header-anchor" href="#_2-3-consistency-output-组件"><span>2.3 Consistency Output 组件</span></a></h3><p>由于 LLM 固有的随机性，ChatGPT 的输出是不稳定的。这里将 Text2SQL 也视为 reasoning 问题，于是使用 self-consistency 思想来提高效果。</p><p>论文提出了一个 execution-based self-consistency for Text2SQL 方法，封装为这里的 <mark>Consistency Output</mark>（<strong>CO</strong>）组件，用于选择 LLM 生成的 SQL。</p><p>这里的思想是，<strong>让 LLM 通过多个推理路径来生成多个 SQL answers，然后移除掉其中 execution error 的 SQL，并对剩余的 SQL 进行投票，从而选出最终的答案</strong>。</p><h3 id="_2-4-总结" tabindex="-1"><a class="header-anchor" href="#_2-4-总结"><span>2.4 总结</span></a></h3><p>C3 的整体框架如下：</p>',6),w=t("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240607192336.png",alt:"20240607192336",style:{zoom:"75%"}},null,-1),v=a('<h2 id="三、实验" tabindex="-1"><a class="header-anchor" href="#三、实验"><span>三、实验</span></a></h2><p>论文在 Spider 数据集上使用 Execution Accuracy（EX）作为指标来测试。</p><p>整体上的实验发现，C3 在 Spider 测试集上优于所有传统的基于微调的方法，在 Spider 排行榜上排名第二。与 top-1 方法的 few-shots settings 的 DIN-SQL 相比，只使用了约 10% 的 token 数量，而且这里使用的 GPT-3.5 在成本上也低于 DIN-SQL 使用的 GPT-4。所以，<strong>C3 方法更加预算友好</strong>。</p><p>此外，论文还做了不少的消融实验，总结了 error cases 的分析，具体可参考原论文。</p><h2 id="四、总结" tabindex="-1"><a class="header-anchor" href="#四、总结"><span>四、总结</span></a></h2><p>本文提出的 C3 基于 ChatGPT 实现了 zero-shot Text2SQL，并取得了 zero-shot 的最好性能。</p><p>C3 从模型输入、模型偏差和模型输出三个角度为基于 GPT 的 Text2SQL 提供了系统的处理方法。这些方法值得后面的研究来参考。</p>',7);function I(N,E){const l=i("ExternalLinkIcon"),n=i("center");return c(),p("div",null,[t("blockquote",null,[t("p",null,[o("论文："),t("a",m,[o("C3: Zero-shot Text-to-SQL with ChatGPT"),e(l)])]),u,d,t("p",null,[o("Code："),t("a",g,[o("C3SQL | GitHub"),e(l)])])]),_,e(n,null,{default:s(()=>[C]),_:1}),b,e(n,null,{default:s(()=>[T]),_:1}),x,e(n,null,{default:s(()=>[L]),_:1}),k,y,S,e(n,null,{default:s(()=>[f]),_:1}),P,e(n,null,{default:s(()=>[Q]),_:1}),G,e(n,null,{default:s(()=>[w]),_:1}),v])}const q=r(h,[["render",I],["__file","index.html.vue"]]),O=JSON.parse(`{"path":"/arxiv/2307.07306/","title":"🌙 C3：使用 ChatGPT 实现 zero-shot Text2SQL","lang":"zh-CN","frontmatter":{"title":"🌙 C3：使用 ChatGPT 实现 zero-shot Text2SQL","author":"Bin Yu","createTime":"2024/06/07 11:42:00","permalink":"/arxiv/2307.07306/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"一、论文速读","slug":"一、论文速读","link":"#一、论文速读","children":[]},{"level":2,"title":"二、C3","slug":"二、c3","link":"#二、c3","children":[{"level":3,"title":"2.1 Clear Prompts 组件","slug":"_2-1-clear-prompts-组件","link":"#_2-1-clear-prompts-组件","children":[]},{"level":3,"title":"2.2 Calibration with Hints 组件","slug":"_2-2-calibration-with-hints-组件","link":"#_2-2-calibration-with-hints-组件","children":[]},{"level":3,"title":"2.3 Consistency Output 组件","slug":"_2-3-consistency-output-组件","link":"#_2-3-consistency-output-组件","children":[]},{"level":3,"title":"2.4 总结","slug":"_2-4-总结","link":"#_2-4-总结","children":[]}]},{"level":2,"title":"三、实验","slug":"三、实验","link":"#三、实验","children":[]},{"level":2,"title":"四、总结","slug":"四、总结","link":"#四、总结","children":[]}],"readingTime":{"minutes":4.71,"words":1412},"git":{"updatedTime":1717830098000,"contributors":[{"name":"yubinCloud","email":"yubin_SkyWalker@yeah.net","commits":2}]},"filePathRelative":"notes/Text2SQL/2307.C3.md","categoryList":[{"type":10000,"name":"notes"},{"type":10004,"name":"Text2SQL"}]}`);export{q as comp,O as data};
