import{_ as l,r as i,o as r,c as s,a as e,b as t,d as a,w as p,e as o}from"./app-s5JIphqh.js";const d={},h={href:"http://arxiv.org/abs/1809.08887",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,"⭐⭐⭐⭐⭐",-1),u=e("p",null,"EMNLP 2018, arXiv:1809.08887",-1),g={href:"https://yale-lily.github.io/spider",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/taoyds/spider",target:"_blank",rel:"noopener noreferrer"},x=o('<h2 id="一、论文速读" tabindex="-1"><a class="header-anchor" href="#一、论文速读"><span>一、论文速读</span></a></h2><p>本文提出了 Text2SQL 方向的一个经典数据集 —— Spider 1.0，其质量和难度均大于 WikiSQL，包含了 200 个数据库，覆盖了 138 个不同的领域，平均每个数据库由 27.6 个 columns 和 8.8 个外键，总共由 10,181 个 questions 以及 5,693 个对应的复杂 SQL 查询构成。</p><blockquote><p>Spider 数据集的 test split 并未公开</p></blockquote><h3 id="_1-1-数据集的特点" tabindex="-1"><a class="header-anchor" href="#_1-1-数据集的特点"><span>1.1 数据集的特点</span></a></h3><p>数据集由 11 名计算机学生构建，在做数据标注时，确保了以下三个方面：</p><ul><li><strong>SQL 模式的覆盖</strong>：每个数据库的示例覆盖了常见的 SQL 模式，包含多列的 SELECT 和 aggregation、WHERE、GROUP BY、HAVING、ORDER BY、LIMIT、JOIN、UNION、LIKE 等等，且每个 table 都至少出现在一个 query 中。</li><li><strong>SQL 一致性</strong>：有些 question 可能有多种 SQL 查询写法，该工作设计了标注协议，当存在多个等效 query 时，所有标注者都选择相同的 SQL 查询模式。</li><li><strong>问题清晰化</strong>：不会创建模糊有歧义的问题，比如“最受欢迎”这种没有明确定义的问题；也没有需要数据库之外的常识才能回答的问题，因为这脱离了“语义解析”的训练目标。</li></ul>',6),b={href:"https://github.com/coleifer/sqlite-web",target:"_blank",rel:"noopener noreferrer"},k=o('<h3 id="_1-2-任务的定义" tabindex="-1"><a class="header-anchor" href="#_1-2-任务的定义"><span>1.2 任务的定义</span></a></h3><p>模型将被在不同的复杂 SQL、复杂数据库、复杂 domains 上被测试，要求模型能够对 question 理解语义，并对新的数据库有泛化能力。</p><p>任务不评估模型生成 value 的能力，因为这个 benchmark 侧重评估预测出正确的 SQL 结构和 columns，数据集中也被排除了需要常识推理和数学计算的 querys。</p><p>论文工作还对数据库的 table names 和 column names 做了清洗，让这些名字清晰且自成一体。比如将 <code>stu id</code> 转为 <code>student id</code></p><h2 id="二、评价指标" tabindex="-1"><a class="header-anchor" href="#二、评价指标"><span>二、评价指标</span></a></h2><p>本论文给出了三个 metrics：Component Matching、Exact Matching 和 Execution Accuracy。</p><h3 id="_2-1-component-matching" tabindex="-1"><a class="header-anchor" href="#_2-1-component-matching"><span>2.1 Component Matching</span></a></h3><p><mark>Component Matching</mark> 衡量的是 prediction 和 ground-truth SQL 的不同 component 的平均精确匹配效果。</p><p>SQL 中每个 keywords 视为一种 component，并将其分解为含有多个 sub-component 的 bag。比如 <code>SELECT avg(col1), max(col2), min(col1)</code> 被分解为一个 bag：<code>(avg, min, col1), (max, col2)</code>，然后查看 prediction 和 ground-truth SQL 的 bag 是否相同。</p><blockquote><p>keywords 指的是包括所有不带 column name 和 operatiors 的 SQL 关键字，如 SELECT、WHERE 等。</p><p>被分解后，每一个 component 被分解为一个 bag，这个 bag 中的每一个元素对应一个 sub-component，这个 sub-component 也是被分解为一个 bag。</p></blockquote><p>为了报告一个 model 在每个 component 上的整体表现，我们会计算每个 exact set matching 的 F1 score。</p><h3 id="_2-2-exact-matching" tabindex="-1"><a class="header-anchor" href="#_2-2-exact-matching"><span>2.2 Exact Matching</span></a></h3><p><mark>Exact Matching</mark> 衡量的是两个 SQL 是否整体上等同。按照上一节的描述，只有当两个 SQL 在所有 component 上都精确匹配的情况下，这个样本预测才算做正确。</p><h3 id="_2-3-execution-acc" tabindex="-1"><a class="header-anchor" href="#_2-3-execution-acc"><span>2.3 Execution Acc</span></a></h3><p><mark>Execution Acc</mark> 比较的两个 SQL 执行的结果集是否相同。</p><ul><li>Exact Matching 可能会产生 false negative</li><li>Execution Acc 可能会产生 false positive</li></ul><h2 id="三、数据集示例" tabindex="-1"><a class="header-anchor" href="#三、数据集示例"><span>三、数据集示例</span></a></h2><p>根据 SQL component 数量、conditions 等等，将 SQL queries 分成了四个难度：easy、medium、hard 和 extra hard。</p><p>下图展示了四个 level 的示例：</p>',19),S=e("img",{src:"https://notebook-img-1304596351.cos.ap-beijing.myqcloud.com/img/20240519213251.png",alt:"20240519213251",style:{zoom:"75%"}},null,-1),L=o('<p>当时论文测试了已有的几个 Text2SQL 模型，也发现都没有表现很好，也说明了 Spider 数据集的难度较高。</p><h2 id="四、实验结论" tabindex="-1"><a class="header-anchor" href="#四、实验结论"><span>四、实验结论</span></a></h2><p>论文使用 SQLNet、TypeSQL 等模型测试了一波，发现以下整体的结论：</p><ul><li>所有模型的整体表现都很低，说明 Spider 具有挑战性，尤其是 WHERE 子句的预测，因为 WHERE 子句更有可能有多个 columns 和 operators。</li><li>目前的模型在 test split 上拓展到新数据库时都表现较差，这说明 Spider 为模型泛化到新的数据库提出了挑战。</li><li>数据库的模式复杂性也会影响模型的性能，实验也发现，随着数据库的外键数量增多，表现也会下降。</li></ul><h2 id="五、代码" tabindex="-1"><a class="header-anchor" href="#五、代码"><span>五、代码</span></a></h2><p>GitHub 首页中给出了 example 的格式，也给出了用于评估的脚本 <code>evaluation.py</code>。</p>',6);function f(E,v){const n=i("ExternalLinkIcon"),c=i("center");return r(),s("div",null,[e("blockquote",null,[e("p",null,[t("论文："),e("a",h,[t("Spider: A Large-Scale Human-Labeled Dataset for Complex and Cross-Domain Semantic Parsing and Text-to-SQL Task"),a(n)])]),m,u,e("p",null,[t("Dataset: "),e("a",g,[t("spider"),a(n)])]),e("p",null,[t("GitHub: "),e("a",_,[t("github.com/taoyds/spider"),a(n)])])]),x,e("blockquote",null,[e("p",null,[t("标注工作可以借助 "),e("a",b,[t("sqlite-web"),a(n)]),t(" 来打开数据库并查看。")])]),k,a(c,null,{default:p(()=>[S]),_:1}),L])}const y=l(d,[["render",f],["__file","index.html.vue"]]),q=JSON.parse(`{"path":"/arxiv/1809.08887/","title":"🐋 Spider 1.0 数据集","lang":"zh-CN","frontmatter":{"title":"🐋 Spider 1.0 数据集","author":"Bin Yu","createTime":"2024/05/19 17:53:00","permalink":"/arxiv/1809.08887/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"一、论文速读","slug":"一、论文速读","link":"#一、论文速读","children":[{"level":3,"title":"1.1 数据集的特点","slug":"_1-1-数据集的特点","link":"#_1-1-数据集的特点","children":[]},{"level":3,"title":"1.2 任务的定义","slug":"_1-2-任务的定义","link":"#_1-2-任务的定义","children":[]}]},{"level":2,"title":"二、评价指标","slug":"二、评价指标","link":"#二、评价指标","children":[{"level":3,"title":"2.1 Component Matching","slug":"_2-1-component-matching","link":"#_2-1-component-matching","children":[]},{"level":3,"title":"2.2 Exact Matching","slug":"_2-2-exact-matching","link":"#_2-2-exact-matching","children":[]},{"level":3,"title":"2.3 Execution Acc","slug":"_2-3-execution-acc","link":"#_2-3-execution-acc","children":[]}]},{"level":2,"title":"三、数据集示例","slug":"三、数据集示例","link":"#三、数据集示例","children":[]},{"level":2,"title":"四、实验结论","slug":"四、实验结论","link":"#四、实验结论","children":[]},{"level":2,"title":"五、代码","slug":"五、代码","link":"#五、代码","children":[]}],"readingTime":{"minutes":3.73,"words":1119},"git":{"updatedTime":1717830098000,"contributors":[{"name":"yubinCloud","email":"yubin_SkyWalker@yeah.net","commits":4}]},"filePathRelative":"notes/Text2SQL/1809.Spider 数据集.md","categoryList":[{"type":10000,"name":"notes"},{"type":10004,"name":"Text2SQL"}]}`);export{y as comp,q as data};
